<div id="app-daily-cheque-print-report">
    <div class="row bg-title">
        <div class="col-lg-8 col-md-6 col-sm-6 col-xs-12">
            <h4 class="page-title" style="cursor: s-resize;">
                <span>Daily Cheque Book Print Report</span>
                <img src="~/Content/Images/refreshing.gif" v-if="ui.is_loading" />
            </h4>
        </div>

        @*<div class="col-lg-4 col-md-6 col-sm-6 col-xs-12">
            <ul class="nav nav-pills pull-right" role="tablist">
                <li class="nav-item" role="presentation">
                    <a href="javascript:void(0)" class="nav-link bg-primary" v-on:click="showModal()">Create New</a>
                </li>
            </ul>

        </div>*@
    </div>
    <div class="col-md-12">
        <div class="row">
            <div class="form-group col-md-6">
                <label class="control-label col-md-4">From</label>
                <div class="col-md-8">
                    <input type="text" id="txtFromDate" class="form-control input-sm" autocomplete="off" v-model="search.FromDate" />
                </div>
            </div>

            <div class="form-group col-md-6">
                <label class="control-label col-md-4">To</label>
                <div class="col-md-8">
                    <input type="text" id="txtToDate" class="form-control input-sm" autocomplete="off" v-model="search.ToDate" />
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-6">
                <label class="control-label col-md-4">Branch Code </label>
                <div class="col-md-8">
                    <select v-model="search.BranchCode" class="form-control input-sm">
                        <option value="">Select Branch</option>
                        <option v-for="(p,key1) in master.branch_list" :value="p.BranchCode">{{p.BranchName}}</option>
                    </select>
                </div>
            </div>
            <div class="form-group col-md-6">
                <label class="control-label col-md-4">Destroy Account </label>
                <div class="col-md-8">
                    <input type="text" v-model="search.AccountNo" class="form-control input-sm" autocomplete="off" />
                </div>
            </div>            
        </div>
        <hr />
        <div class="row">
            <div class="pull-right" style="margin-right:3%">
                <button type="button" :disabled="ui.is_loading==true" class="btn btn-primary btn-sm" v-on:click="onSearchClick()">
                    {{ui.is_loading==true? 'Searching...':'Search'}}
                </button>
                <button :disable="ui.is_exporting==true" type="button" class="btn btn-success btn-sm" v-on:click="onExportClick()">
                    <i class="fa fa-file-excel-o" aria-hidden="true"></i>  Export To Excel
                </button>
                <input type="button" class="btn btn-success btn-sm " value="Send SMS" v-on:click="SendSMS()" />
                <input type="button" class="btn btn-danger btn-sm " value="Destroy Account" v-on:click="onDestroyAccountClick()"/>
                <input type="button" id="btnReset" class="btn btn-danger btn-sm resetform" value="Reset" v-on:click="onResetClick()" />
            </div>
        </div>
    </div>

    <div class="container">
        <div class="row">
            <table class="table table-bordered table-responsive">
                <thead class="bg-primary text-white">
                    <tr>
                        <th>SN</th>
                        @*<th>ChequeStart No</th>
                        <th>Issue ID</th>*@
                        <th>Currency Code</th>
                        <th>Account No</th>
                        <th>L_Status</th>
                        <th>Branch Code</th>
                        <th>Full Name</th>
                        <th>Relationship Type</th>
                        <th>No of Leaves</th>
                        <th>Print Date</th>
                        <th>Info Code</th>
                        <th>Mob</th>
                        <th>L_Reviewed By</th>
                        @*<th>L_Reviewed Date</th>*@
                        <th>Maker Name</th>
                        <th>Reviewer Name</th>
                    </tr>
                </thead>
              
                <tr v-for="(item, key) in master.daily_cheque_print_report" :key="key">
                    <td>
                        {{key + 1}}
                    </td>
                    @*<td>{{item.ChequeStartNo}}</td>
                    <td>{{item.IssueID}}</td>*@
                    <td>{{item.CurrencyCode}}</td>
                    <td>{{item.AccountNo}}</td>
                    <td>{{item.LStatus}}</td>
                    <td>{{item.BranchCode}}</td>
                    <td>{{item.FullName}}</td>
                    <td>{{item.RelationShipType}}</td>
                    <td>{{item.NoOfLeaves}}</td>
                    <td>{{item.PrintDate}}</td>
                    <td>{{item.InfoCode}}</td>
                    <td>{{item.Mob}}</td>
                    <td>{{item.ReviewedBy}}</td>
                    @*<td>{{item.ReviewedDate}}</td>*@
                    <td>{{item.MakerName}}</td>
                    <td>{{item.ReviewerName}}</td>

                </tr>
            </table>
            <div class="row mt-1">
                <div class="col-sm-6">
                    <p class="no-data">{{showingMToNOfXPages}}</p>
                </div>
                <div class="col-sm-6">
                    <div class="vue-pagination-wrap text-sm-right">
                        <paginate :page-count="paginationNoOfPages"
                                  :click-handler="onNewPageClicked"
                                  :prev-text="'Prev'"
                                  :next-text="'Next'"
                                  v-model="search.CurrentPage"
                                  :container-class="'pagination m-0'">
                        </paginate>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

<script type="text/javascript">
    Vue.component('paginate', VuejsPaginate);
    var vm = new Vue({
        el: '#app-daily-cheque-print-report',
        components: {
        },
        data: {
            ui: {
                is_loading: false,
                is_exporting: false
            },
            master: {
                daily_cheque_print_report: [],
                branch_list:[]
            },
            search: {
                BranchCode: '',
                AccountNo:'',
                FromDate: '',
                ToDate: '',
                CurrentPage: 1,
                PerPage: 1000,
                Total: 0
            },

        },
        created: function () {
            this.search.FromDate ='@Html.Raw(DateTime.Now.AddDays(-7).ToString("yyyy-MM-dd"))';
            this.search.ToDate = '@Html.Raw(DateTime.Now.ToString("yyyy-MM-dd"))';
            this.getBranches();
        },
        methods: {

            onDestroyAccountClick: function () {
                if (!this.search.AccountNo) {
                    warning('Account number is required');
                    return false;
                }
                if (confirm("Are you sure you want to Destroy Cheque?")) {
                    $.ajax({
                        method: "POST",
                        contentType: "application/json; charset=utf-8",
                        url: "/DailyChequeBookPrintRpt/DestroyAccount",
                        data: JSON.stringify(this.search),
                    }).done(function (response) {
                        if (response.success == true) {
                            success('Cheque information updated successfully.');
                        } else {
                            error_msg(response.message);
                        }
                    }).fail(function (xhr, status, error) {
                        error_msg(error);
                    })
                }
            },


            SendSMS: function () {
                if (confirm("Are you sure you want to Send SMS?")) {
                    if (this.ui.is_loading == true) return;
                    this.ui.is_loading = true;
                    blockUI();

                    $.ajax({
                        method: "GET",
                        contentType: "application/json; charset=utf-8",
                        url: "/DailyChequeBookPrintRpt/SendSMS",
                        data: this.search,
                    }).done(function (response) {

                        if (response.success) {
                            //success('Cheque information updated successfully.');
                            success(response.message);
                        } else {
                            error_msg(response.message);
                        }
                        if (response.success == true) {
                            vm.master.daily_cheque_print_report = response.result;
                            if (vm.master.daily_cheque_print_report.length > 0) {
                                for (var i = 0; i < vm.master.daily_cheque_print_report.length; i++) {
                                    vm.$set(vm.master.daily_cheque_print_report[i], "UI_Checked", false);
                                }
                            }
                            vm.search.Total = response.result2;
                        } else {
                            error_msg(response.message);
                        }
                        vm.ui.is_loading = false;
                        $.unblockUI();
                    }).fail(function (xhr, status, error) {
                        vm.ui.is_loading = false;
                        error_msg(error);
                        $.unblockUI();
                    })
                }
            }
                ,
          
            getBranches: function () {
                this.ui.is_loading = true;
                $.ajax({
                    method: "GET",
                    contentType: "application/json; charset=utf-8",
                    url: "/DailyChequeBookPrintRpt/GetBranches"
                }).done(function (response) {
                    if (response.message == "SESSION_EXPIRED") {
                        return logout();
                    }
                    if (response.success == true) {
                        vm.master.branch_list = response.result;
                        vm.getDailyChequeBookPrintReport();
                    } else {
                        error_msg(response.message);
                    }
                    vm.ui.is_loading = false;
                }).fail(function (xhr, status, error) {
                    vm.ui.is_loading = false;
                    error_msg(error);
                })
            },
            getDailyChequeBookPrintReport: function () {
                if (this.ui.is_loading == true) return;
                this.ui.is_loading = true;
                blockUI();
                $.ajax({
                    method: "GET",
                    contentType: "application/json; charset=utf-8",
                    url: "/DailyChequeBookPrintRpt/GetChequeBookPrintItems",
                    data: this.search,
                }).done(function (response) {
                    if (response.message == "SESSION_EXPIRED") {
                        return logout();
                    }
                    //if (response.success == true) {
                    //    vm.master.daily_cheque_print_report = response.result;
                    //    vm.search.Total = response.result2;
                    //    $.unblockUI();
                    //}
                    //else {
                    //    error_msg(response.message);
                    //}
                    if (response.success == true) {
                        vm.master.daily_cheque_print_report = response.result;
                        if (vm.master.daily_cheque_print_report.length > 0) {
                            for (var i = 0; i < vm.master.daily_cheque_print_report.length; i++) {
                                vm.$set(vm.master.daily_cheque_print_report[i], "UI_Checked", false);
                            }
                        }
                        vm.search.Total = response.result2;
                    } else {
                        error_msg(response.message);
                    }
                    vm.ui.is_loading = false;
                    $.unblockUI();
                }).fail(function (xhr, status, error) {
                    vm.ui.is_loading = false;
                    error_msg(error);
                    $.unblockUI();
                })
            },
            onSearchClick: function () {
                this.search.CurrentPage = 1;
                this.getDailyChequeBookPrintReport();
            },
            onNewPageClicked: function (page) {
                this.search.CurrentPage = page;
                this.getDailyChequeBookPrintReport();
            },
            onExportClick: function () {
                if (this.ui.is_exporting) return;
                this.ui.is_exporting = true;
                $.ajax({
                    method: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "/DailyChequeBookPrintRpt/ExportToExcel",
                    data: JSON.stringify(this.search),
                }).done(function (response) {
                    if (response.success == true) {
                        vm.ui.is_exporting = false;
                        window.location = '/DailyChequeBookPrintRpt/Download';
                    } else {
                        vm.ui.is_exporting = false;
                        error_msg(response.message);
                    }
                    vm.ui.is_exporting = false;
                }).fail(function (xhr, status, error) {
                    error_msg(error);
                    vm.ui.is_exporting = false;
                })
            },
            onResetClick: function () {
                this.search.BranchCode = '';
                this.search.CurrentPage = 1;
                this.search.PerPage = 10;
                this.search.Total = 0;
                this.getDailyChequeBookPrintReport();
            },

        },
        computed: {

            paginationNoOfPages: function () {
                var mod = this.search.Total % this.search.PerPage;
                var count = parseInt(this.search.Total / this.search.PerPage);
                if (mod == 0) return count;
                else return count + 1;
            },
            showingMToNOfXPages: function () {
                if (this.search.Total == 0) return "No record found";
                var M = (this.search.CurrentPage - 1) * this.search.PerPage + 1;
                var N = this.search.CurrentPage * this.search.PerPage;
                if (N > this.search.Total) N = this.search.Total;
                var X = this.search.Total;
                return "Showing " + M + " to " + N + " of " + X + " records";
            },
        }
    });
    $(function () {
        setDatePicker();
    });
    function setDatePicker() {
        $('#txtFromDate').datepicker({
            format: 'yyyy-mm-dd',
            autoclose: true,
            todayHighlight: true,
            minViewMode: 0
        }).on('changeDate', function (e) {
            vm.search.FromDate = e.format('yyyy-mm-dd');
        });
        $('#txtFromDate').val(vm.search.FromDate);
        $('#txtToDate').datepicker({
            format: 'yyyy-mm-dd',
            autoclose: true,
            todayHighlight: true,
            minViewMode: 0
        }).on('changeDate', function (e) {
            vm.search.ToDate = e.format('yyyy-mm-dd');
        });
        $('#txtToDate').val(vm.search.ToDate);
    }

</script>

